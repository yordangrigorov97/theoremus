version: "3"
services:
  zookeeper:
    container_name: zookeeper
    image: 'wurstmeister/zookeeper:latest'
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka
    hostname: kafka
    image: 'wurstmeister/kafka:latest'
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE= true
      # - KAFKA_CREATE_TOPICS=vehicles:1:1
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 9080:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  kafka-consumer:
     container_name: kafka-consumer
     build: './kafka-consumer'
     #      ports:
     #        - 8182:8182
     command: go run .
     depends_on:
       - mongo
       - mongo-express
       - kafka
  kafka-producer:
     container_name: kafka-producer
     build: './kafka-producer'
     command: python3 main.py
     #      ports:
     #        - 8180:8181
     depends_on:
       - kafka
       - kafka-ui
  webapi:
     container_name: webapi
     build: './webapi'
     command: python3 manage.py runserver 0:8080 
     ports:
       - 8080:8080
     depends_on:
       - mongo
  mongo:
    image: mongo:4.4.9-focal
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    depends_on:
      - mongo-express

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 27080:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
  #   postgres:
  #      container_name: postgres 
  #      image: 'postgres'
  #      ports:
  #        - '8082:8082'
  #      depends_on:
  #        - kafka-consumer

