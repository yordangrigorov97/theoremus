version: "3"
services:
  webapi-aws:
     container_name: webapi-aws
     build: './webapi'
     command: python3 manage.py runserver 0:8080 
     ports:
       - 8080:8080
     depends_on:
       - mongo-aws
         # profiles:
         #   - all
         #   - app
     environment:
       MONGO_URI: mongodb://root:root@mongo-aws:27017
  mongo-aws:
    container_name: mongo-aws
    image: "mongo:4.4.9-focal"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
        # profiles: 
        #   - all
        #   - services
  mongo-seed-aws:
    container_name: mongo-seed
    build: "aws/mongo-seed-aws"
    restart: on-failure
    command: "mongoimport --host mongo-aws:27017 --db theoremus --collection vehicles --authenticationDatabase admin --username root --password root --drop --file /data/vehicles"

  mongo-express-aws:
    image: mongo-express
    restart: always
    ports:
      - 27080:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo-aws:27017/
        # profiles: 
        #   - all
        #   - services
    logging:
      driver: none
  #   postgres:
  #      container_name: postgres 
  #      image: 'postgres'
  #      ports:
  #        - '8082:8082'
  #      depends_on:
  #        - kafka-consumer

